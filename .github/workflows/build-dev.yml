name: Build ARM64 Debian Package

on:
  push:
    tags:
      - 'v*' # Trigger on Git tags like v1.0.0
#    branches:
#      - main
  pull_request:
    branches:
      - main

jobs:
  build-deb:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get Git tag version
        id: get_version
        run: |
          VERSION=$(git describe --tags --abbrev=0 | sed 's/^v//')
          echo "Version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Set up QEMU for ARM64
        uses: docker/setup-qemu-action@v2

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2
      #
      # - name: Log in to GitHub Container Registry
      #   if: github.event_name != 'pull_request'
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}
      #
      # - name: Build Docker image for ARM64
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: .
      #     file: .github/docker/Dockerfile
      #     platforms: linux/arm64
      #     push: ${{ github.event_name != 'pull_request' }}
      #     tags: |
      #       ghcr.io/${{ github.repository }}:latest
      #       ghcr.io/${{ github.repository }}:${{ github.sha }}

      - name: Build Debian package inside ARM64 container
        env:
          VERSION: ${{ steps.get_version.outputs.version }}
        run: |
          # docker run --rm -v $(pwd):/workspace -w /workspace ghcr.io/${{ github.repository }}:latest \
          docker run --platform=linux/arm64/v8 --rm -v $(pwd):/workspace -w /workspace nabaco/gstreamer-dev \
            /bin/bash -c "
            export VERSION=$VERSION &&
            ./autogen.sh &&
            ./configure --host=aarch64-linux-gnu &&
            make &&
            checkinstall -D -y --pkgname=remote-audio --pkgversion=$VERSION --arch=arm64 --pkggroup=audio
          "

      - name: Upload Debian package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: remote-audio_${{ steps.get_version.outputs.version }}-1_arm64.deb
          path: remote-audio_${{ steps.get_version.outputs.version }}-1_arm64.deb
